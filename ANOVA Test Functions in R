READ ME:
Hey everyone! This is my first project in R programming. Given that R is mainly used for statistics, 
I decided to create a one way, two way, and a one way ANOVA which takes a linear model @param. I would
love if you all gave it a try as there are an infinite amount of scenarios to test for, and I am just one
aspiring genius. The parameters of each method follows.
One Way: @param (raw alpha value, list of vectors)
Two Way: @param (raw alpha value, list of vectors)
Linear Model One Way: @param (raw alpha value, linear model generated by the function lm(...))


one_way_anova <- function(alpha, l) {
  # This function takes an alpha value and list of vectors as parameters.
 
    message("One-way ANOVA is typically used when you have a single independent
            variable, or factor, and your goal is to investigate if variations,
            or different levels of that factor have a measurable effect on a 
            dependent variable.\n\n")
 
  
  k = length(l)
  ###
  N = 0
  for (i in l) {
   N = N+length(i)
  }
  ###
  T = 0
  for (i in l) {
    T = T+sum(i)
  }
  CM = (T^2)/N
  ###
  Total_SS_Temp = 0
  for (i in l) {
    Total_SS_Temp = Total_SS_Temp + sum(i^2)
  }
  Total_SS = Total_SS_Temp-CM
  ###
  SST_Temp = 0
  for (i in l) {
    SST_Temp = SST_Temp + (sum(i)^2)/length(i)
  }
  SST = SST_Temp-CM
  SSE = Total_SS-SST
  MST = SST/(k-1)
  MSE = SSE/(N-k)
  F_calculated = MST/MSE
  F_alpha = qf(1-alpha,k-1,N-k)
  
  
  message("N=", N, "  k=", k, "  T=", T)
  message("\nCM=", CM, "  Total_SS=", Total_SS)
  message("\nSST=", SST, "  SSE=", SSE)
  message("\nMST=", MST, "  MSE=", MSE)
  message("\nF_calculated=", F_calculated, "  F_alpha=", F_alpha)
  
  if (F_calculated>F_alpha) {
    message("Conclusion: Reject the null hypothesis")
  } else {
    message("Conclusion: Not enough evidence to reject the null hypothesis")
  }
  mm = pf(F_calculated,k-1,N-k)
  print(mm)
  print(k-1)
  print(N-k)
}

##################
##################
##################

two_way_anova <- function(alpha, l) {
  #This function takes an alpha value and list of vectors as parameters
  
  k = length(l)
  b = length(as.numeric(unlist(l[1])))
  n = b*k
  
  
    message("This function is designed to work with the lists
            being the rows of a given table, but, in theory,
            it should work with the columns as the passed 
            list too.")
    message("Two-way ANOVA is used to estimate how the mean of
            a quantitative variable changes according to the 
            levels of two categorical variables. Use a two-way
            ANOVA when you want to know how two independent 
            variables, in combination, affect a dependent variable.")
  }
  
  ###
  vecB = c()
  i = 1
  while (i<(k)) {
    B = 0
    for (x in l) {
      vecB = append(vecB,as.numeric(unlist(x))[i])
    }
    i = i+1
  }
  B = sum(vecB)
  ###
  T = 0
  for (i in l) {
    T = T+sum(i)
  }
  CM = (B^2)/n
  ###
  SSB = 0
  helper = 0
  count = 1
  print(vecB)
  for (i in vecB) {
    helper = helper+i
    #message("helper:", helper)
    #message("count:", count)
    if ((count%%k)==0) {
    SSB = SSB+(helper^2)
    count = 0
    helper = 0
    }
    #message("SSB:", SSB)
  count = count+1
  }
  SSB = (SSB/k)-CM
  MSB = SSB/(b-1)
  ###
  SST = 0
  for (i in l) {
    SST = SST+(sum(as.numeric(unlist(i)))^2)
    #message("SST:", SST)
  }
  SST = (SST/b)-CM
  MST = SST/(k-1)
  ###
  Total_SS = 0
  i=1
  while (i<(k)) {
    for (x in l) {
      Total_SS = Total_SS+(as.numeric(unlist(x))[i]^2)
    }
    i = i+1
  }
  Total_SS = Total_SS-CM
  ###
  SSE = Total_SS-SST-SSB
  MSE = SSE/(n-b-k+1)
  F_MSBcalculated = MSB/MSE
  F_MSTcalculated = MST/MSE
  F_alpha_MST = qf(1-alpha,k-1,n-k-b+1)
  F_alpha_MSB = qf(1-alpha,b-1,n-k-b+1)
  
  
  message("n=", n, "  k=", k, "  b=", b, "  T=", T, "  B=", B)
  message("\nCM=", CM, "  Total_SS=", Total_SS)
  message("\nSST=", SST, "  SSB=", SSB)
  message("\nMST=", MST, "  MSB=", MSB, "  MSE=", MSE)
  message("\nF_MSTcalculated=", F_MSTcalculated, "  F_alpha_MST=", F_alpha_MST, "\n  F_MSBcalculated=", F_MSBcalculated, "  F_alpha_MSB=", F_alpha_MSB)
  
  # Prob should include more details in message
  if (F_MSTcalculated>F_alpha_MST) {
    message("Conclusion: Reject the null hypothesis and conclude that there is a difference in mean resistance among the rows")
  } else {
    message("Conclusion: Not enough evidence to reject the null hypothesis")
  }
  if (F_MSBcalculated>F_alpha_MSB) {
    message("Conclusion: Reject the null hypothesis")
  } else {
    message("Conclusion: Not enough evidence to reject the null hypothesis. Thus, we conclude that there is no difference in the mean resistance among the colunms")
  }
}

##################
##################
##################

one_way_anova_linear_regression <- function(alpha, lm.model) {
  # This function takes an alpha value and a linear model created using lm() as parameters
  R_square = as.numeric(unlist(summary(lm.model)[8]))
  
  k = length(as.numeric(unlist(lm.model[1])))-1 #number of parameters except B0
  n = length(as.numeric(unlist(lm.model[2])))#ask professor for clarification on what the "# 
                #of observations mean." Pretty sure it's number of y's
  top = R_square/k
  bottom = (1-R_square)/(n-k+1) 
  F = top/bottom
  F_alpha = qf(1-alpha,k,n-(k+1))
  if (F > F_alpha) {
    message("We reject the null hypothesis that B1=B2...=Bk=0.
          Thus, the model can be taken as a useful predictor.
          \nF=", F, "  F_alpha=", F_alpha)
  } else {
    message("We fail to reject the null hypothesis. Thus, the
          model is not a useful predictor.\nF=", F, "  F_alpha=", F_alpha)
  }
}
